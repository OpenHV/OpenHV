##############################################################################
# Core Configuration
#
# Basic settings that should be changed by all projects.
##############################################################################

# The id of the mod packaged by this project.
# This must exist as a directory in the mods directory and should not contain spaces.
MOD_ID="hv"

# The OpenRA engine version to use for this project.
ENGINE_VERSION="df61b59746978a7187e0c5f39f7d584e249805a7"

# .dll filenames compiled by the mod solution for use by the runtime assembly check
WHITELISTED_MOD_ASSEMBLIES=""

##############################################################################
# Continuous Integration
#
# Settings controlling the behaviour of Travis CI
# (if it has been enabled on your GitHub repository)
##############################################################################

# Enable tests for common errors when a new commit is pushed to the GitHub repository
# Accepts values "True" or "False".
TRAVIS_TEST_MOD="True"

# Perform a dry run of the installer generation when a new commit is pushed to the GitHub repository
# Accepts values "True" or "False".
TRAVIS_TEST_PACKAGING="False"

##############################################################################
# Packaging
#
# Settings controlling the creation of installers.
##############################################################################

# The prefix used for the installer filenames.
#  - Windows installers will be named as {PACKAGING_INSTALLER_NAME}-{TAG}.exe
#  - macOS installers will be named as {PACKAGING_INSTALLER_NAME}-{TAG}.zip
#  - Linux .appimages will be named as {PACKAGING_INSTALLER_NAME}-${TAG}.AppImage
PACKAGING_INSTALLER_NAME="ExampleMod"

# The human-readable name for this project.
# This is used in:
#  - Crash dialogs (all platforms)
#  - macOS .app bundle name
#  - macOS menu bar
#  - macOS "About" window
#  - Windows installer
#  - Windows start menu
#  - Windows desktop shortcut
#  - Windows "Programs and Features" list
#  - Linux launcher shortcut
PACKAGING_DISPLAY_NAME="OpenHV"

# The URL for the project homepage.
# This is used in:
#  - Windows "Add/Remove Programs" list
PACKAGING_WEBSITE_URL="https://github.com/Mailaender/OpenHV"

# The URL that is displayed in the crash dialog.
PACKAGING_FAQ_URL="http://wiki.openra.net/FAQ"

# The human-readable project authors.
# This is used in:
#  - Windows "Add/Remove Programs" list
PACKAGING_AUTHORS="OpenHV authors"

# The git tag to use for the macOS Launcher files.
PACKAGING_OSX_LAUNCHER_TAG="osx-launcher-20191003"

# Filename to use for the launcher executable on Windows.
PACKAGING_WINDOWS_LAUNCHER_NAME="OpenHV"

# The name of the Windows Program Files directory to install the project files to.
PACKAGING_WINDOWS_INSTALL_DIR_NAME="OpenHV"

# The key prefix used for Windows registry metadata.
# This should not contain spaces or special characters.
PACKAGING_WINDOWS_REGISTRY_KEY="OpenHV"

# Path to the file containing the text to show in the Windows installer license dialog
PACKAGING_WINDOWS_LICENSE_FILE="./COPYING"

# The git tag to use for the AppImage dependencies.
PACKAGING_APPIMAGE_DEPENDENCIES_TAG="20191004"

# Space delimited list of additional files/directories to copy from the engine directory
# when packaging your mod. e.g. "./mods/modcontent" or "./mods/d2k/OpenRA.Mods.D2k.dll"
PACKAGING_COPY_ENGINE_FILES=""

# Overwrite the version in mod.yaml with the tag used for the SDK release
# Accepts values "True" or "False".
PACKAGING_OVERWRITE_MOD_VERSION="True"

##############################################################################
# Advanced Configuration
#
# Most projects will not need to modify these
##############################################################################

# Automatic engine managment will treat the OpenRA engine files like a read-only dependency.
# Disable this if you would like to modify or manager your own engine files.
AUTOMATIC_ENGINE_MANAGEMENT="True"

# The URL to download the engine files from when AUTOMATIC_ENGINE_MANAGEMENT is enabled.
AUTOMATIC_ENGINE_SOURCE="https://github.com/OpenRA/OpenRA/archive/${ENGINE_VERSION}.zip"

# Temporary file/directory names used by automatic engine management.
# Paths outside the SDK directory are not officially supported.
AUTOMATIC_ENGINE_EXTRACT_DIRECTORY="./engine_temp"
AUTOMATIC_ENGINE_TEMP_ARCHIVE_NAME="engine.zip"
ENGINE_DIRECTORY="./engine"

# The url to download the OpenRA macOS launcher files.
PACKAGING_OSX_LAUNCHER_SOURCE="https://github.com/OpenRA/OpenRALauncherOSX/releases/download/${PACKAGING_OSX_LAUNCHER_TAG}/launcher.zip"

# Temporary file name used when downloading the OpenRA macOS launcher files.
PACKAGING_OSX_LAUNCHER_TEMP_ARCHIVE_NAME="launcher.zip"

# The url to download the OpenRA AppImage dependencies.
PACKAGING_APPIMAGE_DEPENDENCIES_SOURCE="https://github.com/OpenRA/AppImageSupport/releases/download/${PACKAGING_APPIMAGE_DEPENDENCIES_TAG}/libs.tar.bz2"

# Temporary file name used when downloading the OpenRA AppImage dependencies.
PACKAGING_APPIMAGE_DEPENDENCIES_TEMP_ARCHIVE_NAME="libs.tar.bz2"

# List of .NET assemblies that we can guarantee exist
# OpenRA.Game.dll is a harmless false positive that we can ignore
WHITELISTED_OPENRA_ASSEMBLIES="OpenRA.Game.exe OpenRA.Utility.exe OpenRA.Platforms.Default.dll OpenRA.Mods.Common.dll OpenRA.Game.dll"

# These are explicitly shipped alongside our core files by the packaging script
WHITELISTED_THIRDPARTY_ASSEMBLIES="ICSharpCode.SharpZipLib.dll FuzzyLogicLibrary.dll MaxMind.Db.dll Eluant.dll rix0rrr.BeaconLib.dll Open.Nat.dll SDL2-CS.dll OpenAL-CS.dll"

# These are shipped in our custom minimal mono runtime and also available in the full system-installed .NET/mono stack
# This list *must* be kept in sync with the files packaged by the AppImageSupport and OpenRALauncherOSX repositories
WHITELISTED_CORE_ASSEMBLIES="mscorlib.dll System.dll System.Configuration.dll System.Core.dll System.Numerics.dll System.Security.dll System.Xml.dll Mono.Security.dll"
