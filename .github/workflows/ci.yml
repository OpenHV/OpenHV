name: Continuous Integration

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  linux:
    name: Linux (.NET 6)
    runs-on: ubuntu-22.04

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Install .NET 6
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Prepare Environment
        run: |
          . mod.config;
          awk '/\r$$/ { exit(1); }' mod.config || (printf "Invalid mod.config format. File must be saved using unix-style (LF, not CRLF or CR) line endings.\n"; exit 1);

      - name: Retrieve Changes
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            sprites:
              - mods/hv/bits/**.png

      - name: Check Code
        run: |
          make check

      - name: Check Sprites
        env:
            ALL_CHANGED_SPRITES: ${{ steps.changed-files.outputs.sprites_all_changed_files }}
        run: |
          make check-sprites BIT_FILES=${ALL_CHANGED_SPRITES}
          sudo apt-get install pngcheck
          make check-pngs

      - name: Check Sounds
        run: |
          sudo apt-get install oggz-tools
          make check-ogg

      - name: Check Mod
        run: |
          sudo apt-get install lua5.1
          make check-scripts -j2
          make TREAT_WARNINGS_AS_ERRORS=true test

  linux-mono:
    name: Linux (mono)
    runs-on: ubuntu-22.04

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Prepare Environment
        run: |
          . mod.config;
          awk '/\r$$/ { exit(1); }' mod.config || (printf "Invalid mod.config format. File must be saved using unix-style (LF, not CRLF or CR) line endings.\n"; exit 1);

      - name: Check Code
        run: |
          mono --version
          make RUNTIME=mono check

      - name: Check Mod
        run: |
          make RUNTIME=mono test

  windows:
    name: Windows (.NET 6.0)
    runs-on: windows-2022

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Install .NET 6
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Check Code
        shell: powershell
        run: |
          # Work around runtime failures on the GH Actions runner
          dotnet nuget locals all --clear
          echo "::remove-matcher owner=csc::"
          .\make.ps1 check

      - name: Check Mods
        run: |
          choco install lua --version 5.1.5.52
          $ENV:Path = $ENV:Path + ";C:\Program Files (x86)\Lua\5.1\"
          .\make.ps1 check-scripts
          .\make.ps1 test
