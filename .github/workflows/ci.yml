name: Continuous Integration

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  linux:
    name: Linux (.NET 8)
    runs-on: ubuntu-22.04

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Remove System .NET
        run: sudo apt-get remove -y dotnet*

      - name: Install .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Retrieve Changed Files
        id: changes
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            git fetch origin main --depth=1
            git diff --name-only --diff-filter=AM origin/main ${{ github.sha }} > changed_files.txt
          else
            git fetch origin ${{ github.event.before }} --depth=1
            git diff --name-only --diff-filter=AM ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          fi
          grep -E 'mods/hv/bits/.*\.png' changed_files.txt > sprites_changed_files.txt || true
          echo "sprites=$(cat sprites_changed_files.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Check Code
        run: |
          make check

      - name: Check Sprites
        env:
            ALL_CHANGED_SPRITES: ${{ steps.changes.outputs.sprites }}
        run: |
          make check-sprites SPRITE_FILES="${ALL_CHANGED_SPRITES}"
          sudo apt-get install pngcheck
          make check-pngs

      - name: Check Sounds
        run: |
          sudo apt-get install oggz-tools
          make check-ogg

      - name: Check Mod
        run: |
          sudo apt-get install lua5.1
          make check-scripts -j2
          make TREAT_WARNINGS_AS_ERRORS=true test

  windows:
    name: Windows (.NET 8.0)
    runs-on: windows-2022

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Install .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Check Code
        shell: powershell
        run: |
          .\make.ps1 check

      - name: Check Mods
        run: |
          choco install lua --version 5.1.5.52 --no-progress
          $ENV:Path = $ENV:Path + ";C:\Program Files (x86)\Lua\5.1\"
          .\make.ps1 check-scripts
          .\make.ps1 test
